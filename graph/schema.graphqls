scalar JSON

enum Role {
  STUDENT
  TEACHER
  ADMIN
}

enum Difficulty {
  EASY
  MEDIUM
  HARD
}

enum ProgressStatus {
  NOT_STARTED
  IN_PROGRESS
  COMPLETED
}

type User {
  id: ID!
  role: Role!
  email: String
  phone: String
  displayName: String
}

type StudentProfile {
  id: ID!
  user: User!
  grade: Int!
  age: Int
  preferences: JSON
}

type TeacherProfile {
  id: ID!
  user: User!
  subjects: [Subject!]!
  grades: [Int!]!
  bio: String
}

type Subject {
  id: ID!
  name: String!
}

type Course {
  id: ID!
  subject: Subject!
  grade: Int!
  title: String!
  status: String
}

type Unit {
  id: ID!
  course: Course!
  title: String!
  order: Int!
}

type Lesson {
  id: ID!
  unit: Unit!
  title: String!
  order: Int!
  difficulty: Difficulty
  status: String
  version: Int!
  content: [ContentBlock!]!
  quiz: Quiz
}

interface ContentBlock {
  id: ID!
  order: Int!
}

type TextBlock implements ContentBlock { id: ID! order: Int! text: String! }
type ImageBlock implements ContentBlock { id: ID! order: Int! url: String! alt: String }
type AudioBlock implements ContentBlock { id: ID! order: Int! url: String! durationSec: Int }
type VideoBlock implements ContentBlock { id: ID! order: Int! url: String! durationSec: Int }
type QuizBlock implements ContentBlock { id: ID! order: Int! quiz: Quiz! }

type Quiz { id: ID! lessonId: ID! questions: [Question!]! }

type Question { id: ID! type: String! prompt: String! options: [Option!] }

type Option { id: ID! text: String! isCorrect: Boolean! }

type Progress { id: ID! user: User! lesson: Lesson! status: ProgressStatus bestScore: Int lastSeenAt: String }

type Attempt { id: ID! user: User! quiz: Quiz! score: Int startedAt: String submittedAt: String answers: [AttemptAnswer!]! }

type AttemptAnswer { id: ID! question: Question! selectedOptionId: ID textAnswer: String }

# Minimal Submission type for publish workflow
type Submission {
  id: ID!
  lesson: Lesson!
  state: String!
  submittedBy: User
  submittedAt: String
}

### Queries

type Query {
  # Auth/session
  viewer: User

  # Catalog
  subjects: [Subject!]!
  courses(grade: Int, subjectId: ID): [Course!]!
  course(id: ID!): Course
  units(courseId: ID!): [Unit!]!
  lessons(unitId: ID!): [Lesson!]!
  lesson(id: ID!): Lesson

  # Discovery & search
  recommendedLessons(grade: Int!): [Lesson!]!
  searchLessons(q: String!, grade: Int): [Lesson!]!

  # Progress
  myProgress(courseId: ID): [Progress!]!
  progressByLesson(lessonId: ID!): Progress

  # Creator dashboards
  myDraftLessons: [Lesson!]!
  submissions(state: String): [Submission!]!
}

### Mutations and Inputs

input SignUpInput { role: Role! email: String phone: String displayName: String password: String }
input CreateStudentProfileInput { grade: Int!, age: Int }
input CreateCourseInput { subjectId: ID!, grade: Int!, title: String! }
input CreateUnitInput { courseId: ID!, title: String!, order: Int }
input CreateLessonInput { unitId: ID!, title: String!, order: Int, difficulty: Difficulty }

# Content blocks
input TextBlockInput { text: String!, order: Int }
input ImageBlockInput { url: String!, alt: String, order: Int }
input AudioBlockInput { url: String!, durationSec: Int, order: Int }
input VideoBlockInput { url: String!, durationSec: Int, order: Int }

# Quiz
input QuestionInput { type: String!, prompt: String!, options: [OptionInput!] }
input OptionInput { text: String!, isCorrect: Boolean! }

# Attempts & progress
input SubmitQuizInput { quizId: ID!, answers: [AnswerInput!]! }
input AnswerInput { questionId: ID!, selectedOptionId: ID, textAnswer: String }

# Upload
input CreateUploadUrlInput { mime: String!, filename: String! }

type Mutation {
  # Auth
  signUp(input: SignUpInput!): User!
  signIn(email: String, phone: String, otp: String, password: String): String # returns JWT
  createStudentProfile(input: CreateStudentProfileInput!): StudentProfile!

  # Catalog (teacher/admin)
  createCourse(input: CreateCourseInput!): Course!
  createUnit(input: CreateUnitInput!): Unit!
  createLesson(input: CreateLessonInput!): Lesson!
  addTextBlock(lessonId: ID!, input: TextBlockInput!): TextBlock!
  addImageBlock(lessonId: ID!, input: ImageBlockInput!): ImageBlock!
  addAudioBlock(lessonId: ID!, input: AudioBlockInput!): AudioBlock!
  addVideoBlock(lessonId: ID!, input: VideoBlockInput!): VideoBlock!

  # Quiz authoring
  createQuiz(lessonId: ID!, questions: [QuestionInput!]!): Quiz!

  # Publish workflow
  submitForReview(lessonId: ID!): Submission!
  approveSubmission(lessonId: ID!): Submission!
  publishLesson(lessonId: ID!): Lesson!

  # Learning flow
  startLesson(lessonId: ID!): Progress!
  completeLesson(lessonId: ID!, score: Int): Progress!
  submitQuiz(input: SubmitQuizInput!): Attempt!

  # Uploads (signed URL)
  createUploadUrl(input: CreateUploadUrlInput!): JSON!
}

